<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	<resultMap type="com.java.member.dto.MemberDto" id="memberDto"/>	
	<resultMap type="com.java.food.dto.FoodDto" id="foodDto"/>
	
	<insert id="insert" parameterType="com.java.member.dto.MemberDto">
		insert into member(MEMBER_CODE, MEMBER_DATE, MEMBER_MAIL, MEMBER_PWD, MEMBER_NAME, MEMBER_STATUS) 
		values('MEMBER'||LPAD(seqMember.nextval,4,0),
		#{memberDate},
		#{memberMail},
		#{memberPwd},
		#{memberName},
		'Y'
		)
	</insert>
	 
	<select id="login" parameterType="java.util.Map" resultType="Integer">
		select count(*) from member where MEMBER_MAIL=#{mail} and MEMBER_PWD=#{pwd}
	</select>
	
	<select id="getMemberCode" parameterType="String" resultType="com.java.member.dto.MemberDto">
		SELECT * from member WHERE MEMBER_MAIL=#{mail}
	</select>
	
	<select id="memberInfo" parameterType="String" resultMap="memberDto" >
		select * from member where MEMBER_CODE = #{memberCode}
	</select>

	<insert id="insertKakao" parameterType="com.java.member.dto.MemberDto">
		insert into member(MEMBER_CODE, MEMBER_MAIL, MEMBER_NAME, MEMBER_DATE, MEMBER_STATUS) 
		values('MEMBER'||LPAD(seqMember.nextval,4,0),
		#{mail},
		#{nickname},
		sysdate,
		'Y'
		)
	</insert>
	
		<insert id="insertNaver" parameterType="java.util.Map">
		insert into member(MEMBER_CODE, MEMBER_MAIL, MEMBER_NAME, MEMBER_DATE, MEMBER_STATUS) 
		values('MEMBER'||LPAD(seqMember.nextval,4,0),
		#{email},
		#{name},
		sysdate,
		'Y'
		)
	</insert>
	

	<select id="emailCheck" parameterType="String" resultType="int" >
		select count(*) from member where MEMBER_MAIL=#{mail}
	</select>
	
	<update id="memberUpdate" parameterType="com.java.member.dto.MemberDto">
		update member set MEMBER_PWD=#{memberPwd}, MEMBER_NAME=#{memberName}, MEMBER_PHONE=#{memberPhone} where MEMBER_CODE=#{memberCode}
	</update>
	
	<insert id="foodInsert" parameterType="com.java.food.dto.FoodDto">
		insert into food(FOOD_CODE, MEMBER_CODE, FOOD_NAME, FOOD_ADDR, FOOD_KIND, FOOD_STATUS, FOOD_DATE, FOOD_READ, food_phone)
		values('FOOD'||LPAD(seqFood.nextval,4,0),
		#{memberCode},
		#{foodName},
		#{foodAddr},
		#{foodKind},
		'N',
		sysdate,
		'0',
		'0'
		)
	</insert>
	
	
	<delete id="myFoodDel" parameterType="String">
		DELETE FROM FOOD WHERE FOOD_CODE = #{foodCode}
	</delete>
	
	
	<select id="getMyFood" parameterType="java.util.Map" resultType="com.java.food.dto.FoodDto">
		SELECT * FROM FOOD WHERE MEMBER_CODE = #{memberCode}
	</select>

	<select id="getMyCoupon" parameterType="String" resultType="com.java.coupon.dto.CouponDto">
		select coupon.coupon_code, coupon.food_code, coupon.coupon_name, coupon.coupon_costori, coupon.coupon_salerate, coupon.coupon_costsale, coupon.coupon_intro, coupon.COUPON_STATUS,
		TO_CHAR(coupon.coupon_startdate, 'YYYY-MM-DD') AS coupon_startdate, TO_CHAR(coupon.coupon_enddate, 'YYYY-MM-DD') AS coupon_enddate, 
		(select image_code from image where refer_code = coupon.coupon_code) AS image_code,
		(select image_name from image where refer_code = coupon.coupon_code) AS image_name, 
		(select image_path from image where refer_code = coupon.coupon_code) AS image_path,
		(select food_name from food Where food_code = coupon.food_code) AS food_name
		from coupon where coupon_code in (select coupon_code from purchase where member_code=#{memberCode})
	</select>
	
	<!-- IMAGE_NAME 작업을 해야함 -->
	<select id="getMyReview" parameterType="String" resultType="com.java.food.dto.FoodReviewDto">
		SELECT REVIEW.REVIEW_CODE, REVIEW.FOOD_CODE, REVIEW.MEMBER_CODE, MEMBER.MEMBER_NAME, REVIEW.REVIEW_DATE, REVIEW.REVIEW_CONT, REVIEW.REVIEW_SCORE, IMAGE.REFER_CODE, LISTAGG(IMAGE_NAME, ',')WITHIN GROUP (ORDER BY IMAGE_NAME) AS IMAGE_NAME
		FROM REVIEW, IMAGE, MEMBER
		WHERE REVIEW_CODE = REFER_CODE(+) AND review.MEMBER_CODE = member.member_code  AND member.member_code=#{memberCode}
		GROUP BY REVIEW.REVIEW_CODE,  REVIEW.FOOD_CODE, review.member_code, MEMBER.MEMBER_NAME, REVIEW.REVIEW_DATE, REVIEW.REVIEW_CONT, REVIEW.REVIEW_SCORE, IMAGE.REFER_CODE
		ORDER BY REVIEW_CODE DESC
	</select>
	
	<select id="getMyFavorite" parameterType="String" resultType="com.java.member.dto.MemberFavoriteDto">
        select food.food_code, food.food_area, food.food_name, food.food_read,
        (select image_name from image where refer_code = food.food_code) AS image_name, 
      (select image_path from image where refer_code = food.food_code) AS image_path,
        (select count(*) from review where food_code=food.food_code) as count,
        (select avg(review_score) from review where food_code=food.food_code) as avg
        from food, favorite
      where food.food_code = favorite.food_code and favorite.member_code=#{memberCode}
    </select>
<!--     
	<select id="getMyFavorite" parameterType="String" resultType="com.java.member.dto.MemberFavoriteDto">
        select food.food_code, food.food_area, food.food_name, food.food_read,
        (select image_name from image where refer_code = food.food_code) AS image_name, 
		(select image_path from image where refer_code = food.food_code) AS image_path,
        (select count(*) from review where food_code=food.food_code) as count,
        (select avg(review_score) from review where food_code=food.food_code) as avg
        from food, favorite
		where food.food_code = favorite.food_code and favorite.member_code=#{memberCode}
    </select>
     -->
	<select id="getCouponCount" parameterType="String" resultType="String">
		select count(*) from purchase where MEMBER_CODE=#{memberCode}
	</select>
	
	<select id="getFavoriteCount" parameterType="String" resultType="String">
		select count(*) from favorite where MEMBER_CODE=#{memberCode}
	</select>
	
	<select id="getReviewCount" parameterType="String" resultType="String">
		select count(*) from review where MEMBER_CODE=#{memberCode}
	</select>
	
	<select id="getMember" parameterType="com.java.member.dto.MemberDto" resultType="com.java.member.dto.MemberDto">
		select * from member	
	</select>
	
	<update id="adminUpdate" parameterType="com.java.member.dto.MemberDto">
		update member set MEMBER_STATUS=#{memberStatus}, MEMBER_NAME=#{memberName}, MEMBER_PHONE=#{memberPhone} where MEMBER_CODE=#{memberCode}
	</update>
	
	<select id="loginCheck" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM ADMIN WHERE ADMIN_ID = #{adminId} AND ADMIN_PWD = #{adminPwd}
	</select>
	
</mapper>























